spring.application.name=appointment-service
# application.properties
logging.file.name=/app/logs/appointment-service.log
logging.level.root=INFO


server.port = 8082
#postgresql
#spring.datasource.url=jdbc:postgresql://localhost:5432/appointment_records
#spring.datasource.username=postgres
#spring.datasource.password=vignesh
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=update

#spring.jpa.hibernate.ddl-auto=create

#spring.data.redis.host=127.0.0.1
#spring.data.redis.host=redis-local-test-2
#spring.data.redis.port=6379
#spring.cache.type=redis

spring.data.redis.host=${SPRING_REDIS_HOST:redis}
spring.data.redis.port=${SPRING_REDIS_PORT:6379}


#Used if redis installed locally, but here we are using it via docker so no need username & password
#spring.data.redis.username=
#spring.data.redis.password=

#eureka
eureka.client.service-url.defaultZone = http://eureka-server-service:8763/eureka/
eureka.client.register-with-eureka = true
eureka.client.fetch-registry = true
eureka.instance.prefer-ip-address = true

spring.kafka.bootstrap-servers=kafka-broker:29092

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks=all
spring.kafka.producer.retries= 3