spring:
  application:
    name: api-gateway-service
  cloud:
    gateway:
      server:
        webflux:
          discovery:
            locator:
              enabled: true
          route:
            0:
              id:

              uri: lb://patient-service
              predicates:
                - Path=/patients/**
              filters:
                - CircuitBreaker=name=patientSvcFallback,fallbackUri=forward:/fallback/patients



server:
  port: 3000



#eureka
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8763/eureka/
    register-with-eureka: true

  instance:
    prefer-ip-address: true

#actuators
management:
  health:
    circuitbreakers:
      enabled: true
    ratelimiters:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

#Define Static routes for Service application
spring.cloud.gateway.server.webflux.routes[0].id=patient-service
spring.cloud.gateway.server.webflux.routes[0].uri=lb://patient-service
spring.cloud.gateway.server.webflux.routes[0].predicates[0]=Path=/patients/**
spring.cloud.gateway.server.webflux.routes[0].filters[0]=CircuitBreaker=name=patientSvcCB,fallbackUri=/fallback/patients

resilience4j.circuitbreaker.instances.appointmentScvFallback.failureRateThreshold=50
resilience4j.circuitbreaker.instances.appointmentScvFallback.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.appointmentScvFallback.slidingWindowSize=10
resilience4j.circuitbreaker.instances.appointmentScvFallback.permittedNumberOfCallsInHalfOpenState=3

# Patient Service CB
resilience4j.circuitbreaker.instances.patientSvcFallback.failureRateThreshold=50
resilience4j.circuitbreaker.instances.patientSvcFallback.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.patientSvcFallback.slidingWindowSize=10

