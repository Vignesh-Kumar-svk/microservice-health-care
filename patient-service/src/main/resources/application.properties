spring.application.name=patient-service

server.port = 8085

#spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration


#Only should invoke at starting and first time
#spring.sql.init.mode = always

#mysql
#spring.datasource.url=jdbc:mysql://localhost:3306/patient_records
#spring.datasource.username =root
#spring.datasource.password =vig24nesh*
#
#spring.jpa.hibernate.ddl-auto=update
#
#
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true


#postgresql


spring.datasource.url=jdbc:postgresql://localhost:5432/patient_records
spring.datasource.username=postgres
spring.datasource.password=vignesh
spring.datasource.driver-class-name=org.postgresql.Driver
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.hibernate.ddl-auto=update
#
#spring.jpa.hibernate.ddl-auto=create

#spring.main.banner-mode=console
#spring.jpa.show-sql=true
##spring.jpa.hibernate.ddl-auto=update

# **CRITICAL CHANGE:** Use the database container's SERVICE NAME as the host
# 'patient-db' is the name we will give the database service in docker-compose.yml
#spring.datasource.url=jdbc:postgresql://patient-service-db:5432/db
#spring.datasource.username=admin_user
#spring.datasource.password=vignesh
#spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

#
#
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true
#
#logging.level.org.springframework.boot.sql.init=DEBUG
#logging.level.org.springframework.jdbc.datasource.init=DEBUG


#eureka
eureka.client.service-url.defaultZone = http://localhost:8762/eureka/
eureka.client.register-with-eureka = true
eureka.client.fetch-registry = true
eureka.instance.prefer-ip-address = true

